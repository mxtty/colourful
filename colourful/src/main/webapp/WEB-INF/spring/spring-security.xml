<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
<!-- 
    <security:global-method-security secured-annotations="enabled" /> -->
    
    <security:http auto-config="true" use-expressions="true">
        <!-- Restrict URLs based on role -->
		<security:intercept-url pattern="/auth/login" access="permitAll"/>
		<security:intercept-url pattern="/order/Checkout" access="hasRole('ROLE_USER')"/>
 		<security:intercept-url pattern="/order1/*" access="hasRole('ROLE_USER')"/>

        <!-- Override default login and logout pages -->
        <security:form-login 
				login-page="/account/SignOn" 
				login-processing-url="/processLogin"
				authentication-failure-url="/account/SignOnError" 
				always-use-default-target="false"
				username-parameter="userId" password-parameter="passwd"
				default-target-url="/catalog"/>
				
      		<security:logout 
				invalidate-session="true" 
				logout-success-url="/home" 
				logout-url="/processLogout"/>
    </security:http>

	<!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
	<bean id="customUserDetailsService" class="com.colourful.domain.security.CustomUserDetailsServiceImpl"/>

	<security:authentication-manager>
	        <security:authentication-provider user-service-ref="customUserDetailsService">
	        		<security:password-encoder ref="passwordEncoder"/>
	        </security:authentication-provider>
	</security:authentication-manager>
	
   <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	 <constructor-arg name="strength" value="11" />
   </bean>
  
</beans>
         